require("dotenv").config();
// app, debug, http 모듈들을 가져옵니다.
// debug 모듈은 콘솔에 로그를 남기는 모듈입니다.
var app = require('../app');
var debug = require('debug')('backend:server');
var http = require('http');

var port = normalizePort(process.env.PORT || '3000');

// 서버가 실행될 port를 설정합니다.
// 기본값으로 3000번 포트를 이용하도록 되어있다.
// app.set('key', 'value') 로 값을 저장할 수 있다.
app.set('port', port); 

var server = http.createServer(app);

// port를 연결하고 서버를 실행한다.
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);


/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
    var port = parseInt(val, 10);
  
    if (isNaN(port)) {
      // named pipe
      return val;
    }
  
    if (port >= 0) {
      // port number
      return port;
    }
  
    return false;
}
  
/**
 * Event listener for HTTP server "error" event.
 */
  
function onError(error) {
    if (error.syscall !== 'listen') {
      throw error;
    }
  
    var bind = typeof port === 'string'
      ? 'Pipe ' + port
      : 'Port ' + port;
  
    // handle specific listen errors with friendly messages
    switch (error.code) {
      case 'EACCES':
        console.error(bind + ' requires elevated privileges');
        process.exit(1);
        break;
      case 'EADDRINUSE':
        console.error(bind + ' is already in use');
        process.exit(1);
        break;
      default:
        throw error;
    }
}
  
  /**
   * Event listener for HTTP server "listening" event.
   */
  
function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port;
    debug('Listening on ' + bind);
 }
  